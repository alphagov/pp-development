#!/bin/bash

set -eu

pp() {
  local blue="\033[34m"
  local reset="\033[0m"
  while read line; do
    echo -e "${blue}[bootstrap]${reset} ${line}"
  done
}

print_green() {
  local green="\033[32m"
  local blue="\033[34m"
  local reset="\033[0m"
  echo -e "${blue}[bootstrap]${green} $@${reset}"
}

quieten_sudo() {
  echo "--> Set root profile to quieten sudo tty message" | pp
  echo '[[ $(test -t 0) ]] && mesg n' > /root/.profile
}

# Sometimes Virtualbox gets confused, often after moving between networks
set_dns_server() {
  echo "--> Set nameserver to 8.8.8.8" | pp
  if ! fgrep -q 'managed by puppet' /etc/resolv.conf; then
    echo 'nameserver 8.8.8.8' > /etc/resolv.conf
  fi
}

set_uk_apt_sources() {
  echo "--> Set sources.list to gb and update apt cache" | pp
  sed -i 's|http://us|http://gb|' /etc/apt/sources.list
  apt-get update -qq
  apt-get install -qq python-software-properties git curl 2>&1 | pp
  test -f /etc/apt/sources.list.d/gds-govuk-precise.list || add-apt-repository ppa:gds/govuk 2>&1 | pp
  apt-get update -qq
}

check_ruby() {
  echo "--> Check for Ruby" | pp
  [[ $(dpkg -s ruby1.9.1 >/dev/null 2>&1) ]] || \
    apt-get install -qq ruby1.9.1 ruby1.9.1-dev 2>&1 | pp
}

configure_gems() {
  echo 'gem: --quiet --no-rdoc --no-ri' > /root/.gemrc
}

install_gem() {
  echo "--> Check for $1" | pp
  local out=$(gem list $1 | grep $1)
  [[ -n $out ]] || gem install $1 2>&1 | pp
}

check_bundler() {
  install_gem 'bundler'
}

check_bowler() {
  install_gem 'bowler'
}

bundle_gems() {
  echo "--> Bundle gems" | pp
  cd /var/apps/pp-puppet
  bundle --path vendor/bundle \
         --standalone \
         --binstubs \
         --without NONEXISTENT \
         --quiet 2>&1 | pp
}

install_modules() {
  echo "--> Update 3rd-party modules" | pp
  cd /var/apps/pp-puppet
  bundle exec librarian-puppet install --destructive >&2
}

do_puppet_run() {
  echo "--> Run Puppet" | pp
  cd /var/apps/pp-puppet

  # Copy in dev hieradata
  if [ -d ../pp-deployment ]; then
    echo "--| use development secrets from pp-deployment" | pp
    cp /var/apps/pp-puppet/hieradata/environment.yaml /tmp/environment.yaml.$$
    cp /var/apps/pp-deployment/environments/dev/hieradata/* /var/apps/pp-puppet/hieradata/

    trap reset_hieradata EXIT SIGINT SIGTERM
  fi


  FACTER_machine_role=development ./bin/puppet apply --modulepath=modules:vendor/modules \
                     --hiera_config=../pp-development/hiera.yaml \
                     manifests/site.pp 2>&1 | pp
}

reset_hieradata() {
  echo "--| reset development secrets" | pp
  if [ -e /tmp/environment.yaml.$$ ]; then
    mv /tmp/environment.yaml.$$ ../pp-puppet/hieradata/environment.yaml
  fi
  rm -f ../pp-puppet/hieradata/secrets.yaml
}

setup_virtualenv() {
  echo "--> setup virtualenv" | pp
  if [ ! -e /home/vagrant/.bash_profile ]; then
    cat > /home/vagrant/.bash_profile <<EOF
WORKON_HOME=\$HOME/.virtualenvs
source /usr/local/bin/virtualenvwrapper.sh
EOF
    chown vagrant:vagrant /home/vagrant/.bash_profile
  fi
}

main() {
  quieten_sudo
  set_dns_server
  set_uk_apt_sources
  check_ruby
  configure_gems
  check_bundler
  check_bowler
  bundle_gems
  install_modules
  do_puppet_run
  setup_virtualenv
  print_green "pp-development/tools/bootstrap-vagrant exit success"
}

main

